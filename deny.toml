# cargo-deny configuration

[licenses]
# The lint level for crates which have not explicitly allowed licenses
# Will be used for all sections
allow = [
    "MIT",
    "Apache-2.0",
    "Apache-2.0 WITH LLVM-exception",
    "Unicode-DFS-2016",
    "Unicode-3.0",
    "BSD-3-Clause",
    "BSD-2-Clause",
    "ISC",
    "CC0-1.0",
    "BSL-1.0",
    "MPL-2.0",
    "Zlib",
    "0BSD",
    "Unlicense",
]

# Allow 1 or more licenses on a per-crate basis
[[licenses.exceptions]]
# OpenSSL is licensed under Apache-2.0 style license
name = "openssl"
allow = ["OpenSSL"]

[bans]
# Lint level for when multiple versions of the same crate are detected
multiple-versions = "warn"

# Deny specific crates
deny = [
    # Example: { name = "openssl", version = "<0.10.55" },
]

# Skip certain crates when checking for duplicates
skip = [
    # Example: { name = "windows-sys", version = "0.42" },
]

# Similarly named crates that are allowed to coexist
allow = [
    # Example: { name = "num_cpus", version = "1" },
]

[advisories]
# The path where the advisory database is cloned/fetched into
db-path = "~/.cargo/advisory-db"
# The url(s) of the advisory databases to use
db-urls = ["https://github.com/rustsec/advisory-db"]
# Ignore specific advisories
ignore = [
    # These are ignored in .cargo/audit.toml as well
    "RUSTSEC-2023-0071",  # RSA vulnerability in sqlx-mysql (not used)
    "RUSTSEC-2024-0436",  # paste crate unmaintained (rmcp dependency)
]

[sources]
# Lint level for what to happen when a crate from a crate registry that is not in the allow list is detected
unknown-registry = "warn"
# Lint level for what to happen when a crate from a git repository that is not in the allow list is detected
unknown-git = "warn"
# List of allowed crate registries
allow-registry = ["https://github.com/rust-lang/crates.io-index"]
# List of allowed Git repositories
allow-git = []